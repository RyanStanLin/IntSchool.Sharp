// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Core.Models;
//
//    var getReportDetailResponseModel = GetReportDetailResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Core.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetReportDetailResponseModel
    {
        [JsonProperty("month")]
        public long Month { get; set; }

        [JsonProperty("studentName")]
        public string StudentName { get; set; }

        [JsonProperty("house")]
        public string House { get; set; }

        [JsonProperty("tutor")]
        public string Tutor { get; set; }

        [JsonProperty("grade")]
        public string Grade { get; set; }

        [JsonProperty("headTeacher")]
        public string HeadTeacher { get; set; }

        [JsonProperty("gradeItems")]
        public List<GradeItem> GradeItems { get; set; }

        [JsonProperty("housePoint")]
        public long HousePoint { get; set; }

        [JsonProperty("houseAchievements")]
        public string HouseAchievements { get; set; }

        [JsonProperty("conductPoints")]
        public long ConductPoints { get; set; }

        [JsonProperty("behaviourEvents")]
        public string BehaviourEvents { get; set; }

        [JsonProperty("deputyComment")]
        public object DeputyComment { get; set; }

        [JsonProperty("tutorComments")]
        public List<object> TutorComments { get; set; }

        [JsonProperty("headTeacherComments")]
        public List<object> HeadTeacherComments { get; set; }

        [JsonProperty("gradePeriod")]
        public GradePeriod GradePeriod { get; set; }

        [JsonProperty("attendanceInfo")]
        public List<AttendanceInfo> AttendanceInfo { get; set; }
    }

    public partial class AttendanceInfo
    {
        [JsonProperty("gradePeriodId")]
        public long GradePeriodId { get; set; }

        [JsonProperty("gradePeriodName")]
        public string GradePeriodName { get; set; }

        [JsonProperty("data")]
        public Data Data { get; set; }
    }

    public partial class Data
    {
        [JsonProperty("intime")]
        public long Intime { get; set; }

        [JsonProperty("late")]
        public long Late { get; set; }

        [JsonProperty("noRecords")]
        public long NoRecords { get; set; }

        [JsonProperty("absent")]
        public long Absent { get; set; }

        [JsonProperty("personal")]
        public long Personal { get; set; }

        [JsonProperty("illness")]
        public long Illness { get; set; }
    }

    public partial class GradeItem
    {
        [JsonProperty("courseName")]
        public string CourseName { get; set; }

        [JsonProperty("teachers")]
        public string Teachers { get; set; }

        [JsonProperty("effort")]
        public string Effort { get; set; }

        [JsonProperty("attainment")]
        public string Attainment { get; set; }

        [JsonProperty("percentage")]
        public long? Percentage { get; set; }

        [JsonProperty("comment")]
        public string Comment { get; set; }

        [JsonProperty("keyWords")]
        public string KeyWords { get; set; }

        [JsonProperty("teachingContent")]
        public string TeachingContent { get; set; }

        [JsonProperty("subjectClass")]
        public string SubjectClass { get; set; }

        [JsonProperty("courseScheduleName")]
        public string CourseScheduleName { get; set; }
    }

    public partial class GradePeriod
    {
        [JsonProperty("monthlyGradePeriodId")]
        public long MonthlyGradePeriodId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("enName")]
        public string EnName { get; set; }

        [JsonProperty("reportType")]
        public string ReportType { get; set; }

        [JsonProperty("schoolYear")]
        public Campus SchoolYear { get; set; }

        [JsonProperty("campus")]
        public Campus Campus { get; set; }

        [JsonProperty("startTime")]
        public long StartTime { get; set; }

        [JsonProperty("endTime")]
        public long EndTime { get; set; }

        [JsonProperty("headTeacher")]
        public bool HeadTeacher { get; set; }

        [JsonProperty("tutor")]
        public bool Tutor { get; set; }

        [JsonProperty("deputyHead")]
        public bool DeputyHead { get; set; }

        [JsonProperty("deputyHeadId")]
        public object DeputyHeadId { get; set; }

        [JsonProperty("courseTeacher")]
        public bool CourseTeacher { get; set; }

        [JsonProperty("effort")]
        public bool Effort { get; set; }

        [JsonProperty("attainment")]
        public bool Attainment { get; set; }

        [JsonProperty("hc")]
        public bool Hc { get; set; }

        [JsonProperty("ep")]
        public bool Ep { get; set; }

        [JsonProperty("teachingReview")]
        public bool TeachingReview { get; set; }
    }

    public partial class Campus
    {
        [JsonProperty("key")]
        public long Key { get; set; }

        [JsonProperty("value")]
        public string Value { get; set; }
    }

    public partial class GetReportDetailResponseModel
    {
        public static GetReportDetailResponseModel FromJson(string json) => JsonConvert.DeserializeObject<GetReportDetailResponseModel>(json, ConverterGetReportDetailResponseModel.Settings);
    }

    public static class SerializeGetReportDetailResponseModel
    {
        public static string ToJson(this GetReportDetailResponseModel self) => JsonConvert.SerializeObject(self, ConverterGetReportDetailResponseModel.Settings);
    }

    internal static class ConverterGetReportDetailResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
