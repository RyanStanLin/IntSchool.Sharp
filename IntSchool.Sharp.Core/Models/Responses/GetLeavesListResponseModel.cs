// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Core.Models;
//
//    var getLeavesListResponseModel = GetLeavesListResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Core.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetLeavesListResponseModel
    {
        [JsonProperty("pageSize")]
        public long PageSize { get; set; }

        [JsonProperty("pageCurrent")]
        public long PageCurrent { get; set; }

        [JsonProperty("totalItem")]
        public long TotalItem { get; set; }

        [JsonProperty("items")]
        public List<GetLeavesListItem> Items { get; set; }
    }

    public partial class GetLeavesListItem
    {
        [JsonProperty("leaveApplicationId")]
        public long LeaveApplicationId { get; set; }

        [JsonProperty("startTime")]
        public long StartTime { get; set; }

        [JsonProperty("endTime")]
        public long EndTime { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("durationInDays")]
        public double DurationInDays { get; set; }

        [JsonProperty("declineReason")]
        public string DeclineReason { get; set; }

        [JsonProperty("auditor")]
        public string Auditor { get; set; }

        [JsonProperty("displayName")]
        public string DisplayName { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("reason")]
        public string Reason { get; set; }

        [JsonProperty("reasonId")]
        public long ReasonId { get; set; }

        [JsonProperty("reasonName")]
        public string ReasonName { get; set; }

        [JsonProperty("reasonEnName")]
        public string ReasonEnName { get; set; }

        [JsonProperty("approveReply")]
        public string ApproveReply { get; set; }

        [JsonProperty("modifyTime")]
        public long ModifyTime { get; set; }

        [JsonProperty("attachment")]
        public List<object> Attachment { get; set; }
    }

    public partial class GetLeavesListResponseModel
    {
        public static GetLeavesListResponseModel FromJson(string json) => JsonConvert.DeserializeObject<GetLeavesListResponseModel>(json, ConverterGetLeavesListResponseModel.Settings);
    }

    public static class SerializeGetLeavesListResponseModel
    {
        public static string ToJson(this GetLeavesListResponseModel self) => JsonConvert.SerializeObject(self, ConverterGetLeavesListResponseModel.Settings);
    }

    internal static class ConverterGetLeavesListResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
