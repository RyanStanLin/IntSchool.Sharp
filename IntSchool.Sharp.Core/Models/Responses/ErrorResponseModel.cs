// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Models;
//
//    var errorResponseModel = ErrorResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Core.Models
{

    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ErrorResponseModel
    {
        [JsonProperty("timestamp")]
        public DateTimeOffset Timestamp { get; set; }

        [JsonProperty("status")]
        public long Status { get; set; }

        //UNAUTHORIZED
        [JsonProperty("error")]
        public string Error { get; set; }

        [JsonProperty("message")]
        public object Message { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }
    }

    public partial class ErrorResponseModel
    {
        public static ErrorResponseModel FromJson(string json) => JsonConvert.DeserializeObject<ErrorResponseModel>(json, ConverterErrorResponseModel.Settings);
    }

    public static class SerializeErrorResponseModel
    {
        public static string ToJson(this ErrorResponseModel self) => JsonConvert.SerializeObject(self, ConverterErrorResponseModel.Settings);
    }

    internal static class ConverterErrorResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}