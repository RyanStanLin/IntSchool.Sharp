// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Models;
//
//    var loginResetPasswordByVerificationCodeResponseModel = LoginResetPasswordByVerificationCodeResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LoginResetPasswordByVerificationCodeResponseModel
    {
        [JsonProperty("vcode")]
        public string Vcode { get; set; }

        [JsonProperty("newPassword")]
        public string NewPassword { get; set; }

        [JsonProperty("mobile")]
        public string Mobile { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("verifyType")]
        public string VerifyType { get; set; }
    }

    public partial class LoginResetPasswordByVerificationCodeResponseModel
    {
        public static LoginResetPasswordByVerificationCodeResponseModel FromJson(string json) => JsonConvert.DeserializeObject<LoginResetPasswordByVerificationCodeResponseModel>(json, IntSchool.Sharp.Models.ConverterLoginResetPasswordByVerificationCodeResponseModel.Settings);
    }

    public static class SerializeLoginResetPasswordByVerificationCodeResponseModel
    {
        public static string ToJson(this LoginResetPasswordByVerificationCodeResponseModel self) => JsonConvert.SerializeObject(self, IntSchool.Sharp.Models.ConverterLoginResetPasswordByVerificationCodeResponseModel.Settings);
    }

    internal static class ConverterLoginResetPasswordByVerificationCodeResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
