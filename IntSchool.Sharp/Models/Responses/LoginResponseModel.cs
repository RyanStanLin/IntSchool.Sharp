// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Models;
//
//    var loginResponseModel = LoginResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LoginResponseModel
    {
        [JsonProperty("success")]
        public bool Success { get; set; }

        [JsonProperty("resCode")]
        public object ResCode { get; set; }

        [JsonProperty("msg")]
        public string Msg { get; set; }

        [JsonProperty("extraMsg")]
        public bool ExtraMsg { get; set; }

        [JsonProperty("token")]
        public string Token { get; set; }
    }

    public partial class LoginResponseModel
    {
        public static LoginResponseModel FromJson(string json) => JsonConvert.DeserializeObject<LoginResponseModel>(json, IntSchool.Sharp.Models.ConverterLoginResponseModel.Settings);
    }

    public static class SerializeLoginResponseModel
    {
        public static string ToJson(this LoginResponseModel self) => JsonConvert.SerializeObject(self, IntSchool.Sharp.Models.ConverterLoginResponseModel.Settings);
    }

    internal static class ConverterLoginResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}