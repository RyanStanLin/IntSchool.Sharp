// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Core.Models;
//
//    var getAttendanceOptionsResponseModel = GetAttendanceOptionsResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Core.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetAttendanceOptionsResponseModel
    {
        [JsonProperty("attendanceStatusId")]
        public long AttendanceStatusId { get; set; }

        [JsonProperty("attendanceKindId")]
        public long AttendanceKindId { get; set; }

        [JsonProperty("value")]
        public string Value { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("enName")]
        public string EnName { get; set; }

        [JsonProperty("attend")]
        public bool Attend { get; set; }

        [JsonProperty("show")]
        public bool Show { get; set; }

        [JsonProperty("permissions")]
        public bool Permissions { get; set; }

        [JsonProperty("status")]
        public bool Status { get; set; }

        [JsonProperty("color")]
        public string Color { get; set; }

        [JsonProperty("abbr")]
        public string Abbr { get; set; }
    }

    public partial class GetAttendanceOptionsResponseModel
    {
        public static List<GetAttendanceOptionsResponseModel> FromJson(string json) => JsonConvert.DeserializeObject<List<GetAttendanceOptionsResponseModel>>(json, ConverterGetAttendanceOptionsResponseModel.Settings);
    }

    public static class SerializeGetAttendanceOptionsResponseModel
    {
        public static string ToJson(this List<GetAttendanceOptionsResponseModel> self) => JsonConvert.SerializeObject(self, ConverterGetAttendanceOptionsResponseModel.Settings);
    }

    internal static class ConverterGetAttendanceOptionsResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
