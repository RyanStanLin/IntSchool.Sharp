// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Core.Models;
//
//    var getRelatedCoursesResponseModel = GetRelatedCoursesResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Core.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetRelatedCoursesResponseModel
    {
        [JsonProperty("courseId")]
        public long CourseId { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("unHandInNum")]
        public long UnHandInNum { get; set; }

        [JsonProperty("isRead")]
        public bool IsRead { get; set; }
    }

    public partial class GetRelatedCoursesResponseModel
    {
        public static List<GetRelatedCoursesResponseModel> FromJson(string json) => JsonConvert.DeserializeObject<List<GetRelatedCoursesResponseModel>>(json, ConverterGetRelatedCoursesResponseModel.Settings);
    }

    public static class SerializeGetRelatedCoursesResponseModel
    {
        public static string ToJson(this List<GetRelatedCoursesResponseModel> self) => JsonConvert.SerializeObject(self, ConverterGetRelatedCoursesResponseModel.Settings);
    }

    internal static class ConverterGetRelatedCoursesResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
