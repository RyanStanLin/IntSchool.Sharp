// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Core.Models;
//
//    var getAccountStudentsResponseModel = GetAccountStudentsResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Core.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetAccountStudentsResponseModel
    {
        [JsonProperty("studentId")]
        public long StudentId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("enName")]
        public string EnName { get; set; }

        [JsonProperty("firstName")]
        public string FirstName { get; set; }

        [JsonProperty("lastName")]
        public string LastName { get; set; }

        [JsonProperty("avatarUrl")]
        public Uri AvatarUrl { get; set; }

        [JsonProperty("campusId")]
        public long CampusId { get; set; }

        [JsonProperty("campusType")]
        [JsonConverter(typeof(GetAccountStudentsResponseModelParseStringConverter))]
        public long CampusType { get; set; }

        [JsonProperty("attendanceType")]
        public string AttendanceType { get; set; }

        [JsonProperty("relation")]
        public string Relation { get; set; }

        [JsonProperty("status")]
        [JsonConverter(typeof(GetAccountStudentsResponseModelParseStringConverter))]
        public long Status { get; set; }

        [JsonProperty("enterDate")]
        public long EnterDate { get; set; }

        [JsonProperty("surname")]
        public string Surname { get; set; }

        [JsonProperty("moniker")]
        public string Moniker { get; set; }

        [JsonProperty("schoolRollStatus")]
        public string SchoolRollStatus { get; set; }

        [JsonProperty("schoolRollNote")]
        public string SchoolRollNote { get; set; }
    }

    public partial class GetAccountStudentsResponseModel
    {
        public static List<GetAccountStudentsResponseModel> FromJson(string json) => JsonConvert.DeserializeObject<List<GetAccountStudentsResponseModel>>(json, ConverterGetAccountStudentsResponseModel.Settings);
    }

    public static class SerializeGetAccountStudentsResponseModel
    {
        public static string ToJson(this List<GetAccountStudentsResponseModel> self) => JsonConvert.SerializeObject(self, ConverterGetAccountStudentsResponseModel.Settings);
    }

    internal static class ConverterGetAccountStudentsResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class GetAccountStudentsResponseModelParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly GetAccountStudentsResponseModelParseStringConverter Singleton = new GetAccountStudentsResponseModelParseStringConverter();
    }
}
