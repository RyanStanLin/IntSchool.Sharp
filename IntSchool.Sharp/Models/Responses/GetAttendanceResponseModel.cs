// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Models;
//
//    var getAttendanceResponseModel = GetAttendanceResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetAttendanceResponseModel
    {
        [JsonProperty("dailyStatistics")]
        public List<DailyStatistic> DailyStatistics { get; set; }

        [JsonProperty("attendanceTypes")]
        public List<string> AttendanceTypes { get; set; }

        [JsonProperty("dailySession")]
        public List<string> DailySession { get; set; }

        [JsonProperty("dormitorySession")]
        public List<string> DormitorySession { get; set; }
    }

    public partial class DailyStatistic
    {
        [JsonProperty("date")]
        public long Date { get; set; }

        [JsonProperty("classPeriods")]
        public List<ClassPeriod> ClassPeriods { get; set; }

        [JsonProperty("editAbleAM")]
        public bool EditAbleAm { get; set; }

        [JsonProperty("editAblePM")]
        public bool EditAblePm { get; set; }

        [JsonProperty("editAbleEVE")]
        public bool EditAbleEve { get; set; }

        [JsonProperty("leaveInfo")]
        public List<LeaveInfo> LeaveInfo { get; set; }

        [JsonProperty("attendances")]
        public Dictionary<string, Attendance> Attendances { get; set; }

        [JsonProperty("dormitoryAttendanceFlag")]
        public bool DormitoryAttendanceFlag { get; set; }

        [JsonProperty("dormitoryAttendances")]
        public DormitoryAttendances DormitoryAttendances { get; set; }

        [JsonProperty("studyRoomAttendanceFlag")]
        public bool StudyRoomAttendanceFlag { get; set; }

        [JsonProperty("studyRoomAttendances")]
        public StudyRoomAttendances StudyRoomAttendances { get; set; }

        [JsonProperty("am")]
        public string Am { get; set; }

        [JsonProperty("pm")]
        public string Pm { get; set; }

        [JsonProperty("eve")]
        public string Eve { get; set; }

        [JsonProperty("amcomment")]
        public string Amcomment { get; set; }

        [JsonProperty("pmcomment")]
        public string Pmcomment { get; set; }

        [JsonProperty("evecomment")]
        public string Evecomment { get; set; }
    }

    public partial class Attendance
    {
        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("comment")]
        public string Comment { get; set; }

        [JsonProperty("courseName")]
        public string CourseName { get; set; }

        [JsonProperty("classRoom")]
        public string ClassRoom { get; set; }
    }

    public partial class DormitoryAttendances
    {
        [JsonProperty("am")]
        public Attendance Am { get; set; }

        [JsonProperty("pm")]
        public Attendance Pm { get; set; }

        [JsonProperty("eve")]
        public Attendance Eve { get; set; }
    }

    public partial class LeaveInfo
    {
        [JsonProperty("startTime")]
        public long StartTime { get; set; }

        [JsonProperty("endTime")]
        public long EndTime { get; set; }

        [JsonProperty("reason")]
        public string Reason { get; set; }
    }

    public partial class StudyRoomAttendances
    {
        [JsonProperty("eve")]
        public Attendance Eve { get; set; }
    }

    public partial class GetAttendanceResponseModel
    {
        public static GetAttendanceResponseModel FromJson(string json) => JsonConvert.DeserializeObject<GetAttendanceResponseModel>(json, IntSchool.Sharp.Models.ConverterGetAttendanceResponseModel.Settings);
    }

    public static class SerializeGetAttendanceResponseModel
    {
        public static string ToJson(this GetAttendanceResponseModel self) => JsonConvert.SerializeObject(self, IntSchool.Sharp.Models.ConverterGetAttendanceResponseModel.Settings);
    }

    internal static class ConverterGetAttendanceResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
