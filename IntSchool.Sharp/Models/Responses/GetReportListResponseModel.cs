// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using IntSchool.Sharp.Models;
//
//    var getReportListResponseModel = GetReportListResponseModel.FromJson(jsonString);

namespace IntSchool.Sharp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetReportListResponseModel
    {
        [JsonProperty("studentId")]
        public object StudentId { get; set; }

        [JsonProperty("gradePeriodId")]
        public long GradePeriodId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("enName")]
        public string EnName { get; set; }

        [JsonProperty("schoolYear")]
        public string SchoolYear { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("requestUrl")]
        public string RequestUrl { get; set; }

        [JsonProperty("templateId")]
        public long TemplateId { get; set; }
    }

    public partial class GetReportListResponseModel
    {
        public static List<GetReportListResponseModel> FromJson(string json) => JsonConvert.DeserializeObject<List<GetReportListResponseModel>>(json, IntSchool.Sharp.Models.ConverterGetReportListResponseModel.Settings);
    }

    public static class SerializeGetReportListResponseModel
    {
        public static string ToJson(this List<GetReportListResponseModel> self) => JsonConvert.SerializeObject(self, IntSchool.Sharp.Models.ConverterGetReportListResponseModel.Settings);
    }

    internal static class ConverterGetReportListResponseModel
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
